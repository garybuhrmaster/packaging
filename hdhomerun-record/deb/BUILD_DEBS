#!/bin/bash

HDHRDVR_VERSION=$1

if [ "$HDHRDVR_VERSION" == "" ]; then
    echo "HDHRDVR VERSION must be provided as argument."
    exit 1
fi

if [ ! -f "SOURCES/hdhomerun_record_linux_$HDHRDVR_VERSION" ]; then
  /usr/bin/wget -O SOURCES/hdhomerun_record_linux_$HDHRDVR_VERSION https://download.silicondust.com/hdhomerun/hdhomerun_record_linux_${HDHRDVR_VERSION} || rm -f SOURCES/hdhomerun_record_linux_$HDHRDVR_VERSION
fi

export HDHRDVR_VERSION

BUILDFAILURE=0

BUILDDIR=`mktemp -d`

mkdir -p $BUILDDIR/hdhomerun-record

cp -R debian $BUILDDIR/hdhomerun-record
cp SOURCES/hdhomerun_record_linux_$HDHRDVR_VERSION $BUILDDIR/hdhomerun-record

pushd $BUILDDIR/hdhomerun-record >/dev/null

for TARGET_ARCH in "i386" "amd64" "armhf" "arm64"
do
  DEB_BUILD_OPTIONS="nocheck" dpkg-buildpackage -b -d -us -uc --host-arch=$TARGET_ARCH
    if [ ! $? -eq 0 ]; then
      echo ""
      echo "***********************************************************"
      echo "******** Build failed, logs in $BUILDDIR ********"
      echo "***********************************************************"
      echo ""
      BUILDFAILURE=1
    fi
done

popd >/dev/null

cp $BUILDDIR/*.deb DEBS/

if [ $BUILDFAILURE -eq 1 ]; then
    echo ""
    echo "***********************************************************"
    echo "********** One or more builds failed, check logs **********"
    echo "***********************************************************"
    echo ""
    exit 1
fi

# Clean up after ourselves
rm -f $BUILDDIR/*.deb
rm -f $BUILDDIR/*.buildinfo
rm -f $BUILDDIR/*.changes
rm -fr $BUILDDIR/hdhomerun-record
rmdir $BUILDDIR
